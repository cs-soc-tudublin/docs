{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#cs-docs","title":"CS++ Docs","text":"<p>Welcome to CS++'s documentation. This is to keep up to date information about the technical infrastructure of the society.</p> <p>No Prior Knowledge Needed!</p> <p>These docs are written with the assumption that you have never done any kind of System Administration before!</p> <p>As such, we try keep explanations simple, provide extra reading where needed, and show what outputs should look like when you run commands!</p> <p>Feel free to ask for help from others, or look up what you need!</p> <p>This is mostly intended for the sysadmins / core committee. But feel free to read up on how we roll.</p>"},{"location":"#quick-links","title":"Quick Links","text":"<ul> <li>CS++ Website\u00a0\u29c9</li> </ul>"},{"location":"contact/","title":"Contact Us","text":"<p>If you have any questions or comments, please contact us at comp@socs.dit.ie\u00a0\u2709. Or you can join the Discord server\u00a0\u29c9!</p>"},{"location":"tags/","title":"Tags","text":""},{"location":"tags/#tag:9","title":"9","text":"<ul> <li>            Ubiquiti Dream Machine - Special Edition          </li> </ul>"},{"location":"tags/#tag:admin","title":"admin","text":"<ul> <li>            Redundant Power Supply          </li> <li>            Ubiquiti Dream Machine - Special Edition          </li> </ul>"},{"location":"tags/#tag:cloud","title":"cloud","text":"<ul> <li>            Contabo          </li> <li>            Huey Dewey Louie          </li> </ul>"},{"location":"tags/#tag:committee","title":"committee","text":"<ul> <li>            Area Ownership          </li> <li>            Joining the Committee (Infrastructure)          </li> </ul>"},{"location":"tags/#tag:critical","title":"critical","text":"<ul> <li>            MkDocs          </li> <li>            Plume          </li> <li>            Vaultwarden          </li> </ul>"},{"location":"tags/#tag:development","title":"development","text":"<ul> <li>            Development Vision          </li> <li>            Using Sonarqube          </li> </ul>"},{"location":"tags/#tag:easy","title":"easy","text":"<ul> <li>            Add A Service          </li> <li>            Add A User          </li> <li>            Contabo          </li> <li>            Development Vision          </li> <li>            FAQ          </li> <li>            Joining the Committee (Infrastructure)          </li> <li>            SSH          </li> <li>            Useful Commands          </li> </ul>"},{"location":"tags/#tag:hard","title":"hard","text":"<ul> <li>            DNS          </li> </ul>"},{"location":"tags/#tag:hardware","title":"hardware","text":"<ul> <li>            Contabo          </li> <li>            Huey Dewey Louie          </li> </ul>"},{"location":"tags/#tag:how-to","title":"how-to","text":"<ul> <li>            Add A Service          </li> <li>            Add A User          </li> <li>            Contabo          </li> <li>            DNS          </li> <li>            How To!          </li> <li>            Joining the Committee (Infrastructure)          </li> <li>            SSH          </li> <li>            Useful Commands          </li> </ul>"},{"location":"tags/#tag:joining","title":"joining","text":"<ul> <li>            Joining the Committee (Infrastructure)          </li> <li>            SSH          </li> </ul>"},{"location":"tags/#tag:medium","title":"medium","text":"<ul> <li>            Power Loss Checklist          </li> <li>            Using Sonarqube          </li> </ul>"},{"location":"tags/#tag:networking","title":"networking","text":"<ul> <li>            Redundant Power Supply          </li> <li>            Ubiquiti Dream Machine - Special Edition          </li> </ul>"},{"location":"tags/#tag:on-prem","title":"on-prem","text":"<ul> <li>            Power Loss Checklist          </li> <li>            Redundant Power Supply          </li> <li>            Ubiquiti Dream Machine - Special Edition          </li> </ul>"},{"location":"tags/#tag:ownership","title":"ownership","text":"<ul> <li>            Area Ownership          </li> <li>            Ownership Table          </li> </ul>"},{"location":"tags/#tag:services","title":"services","text":"<ul> <li>            EveningBot          </li> <li>            Hedgedoc          </li> <li>            MkDocs          </li> <li>            Morningbot          </li> <li>            Plume          </li> <li>            Starboard          </li> <li>            Vaultwarden          </li> </ul>"},{"location":"tags/#tag:sysadmin","title":"sysadmin","text":"<ul> <li>            Add A Service          </li> <li>            Add A User          </li> <li>            Area Ownership          </li> <li>            Contabo          </li> <li>            DNS          </li> <li>            FAQ          </li> <li>            Ownership Table          </li> <li>            Power Loss Checklist          </li> <li>            Useful Commands          </li> </ul>"},{"location":"development/dev-vision/","title":"Developing for CS++","text":"<p>Developing software for CS++ provides a unique opportunity to develop active production code.</p> <p>Nearly all bespoke software developed for the society goes on to be used actively.</p> <p>As such, it is important to have a universal development policy which ensures that the development and deployment process remain secure, but also convenient.</p>","tags":["development","easy"]},{"location":"development/dev-vision/#open-source-free-as-in-freedom","title":"Open Source, Free as in Freedom","text":"<p>We actively attempt to contribute to Open Source, and most projects we develop (unless they contain secrets that cannot be abstracted away) are public on the GitHub Organisation.</p> <p>In-Dev projects are normally set to private until they are more feature-complete.</p>","tags":["development","easy"]},{"location":"development/dev-vision/#licensing","title":"Licensing","text":"<p>By default, most CS++ projects will be GNU GPL V3.0 licensed.</p> <p>This is normally called a 'copyleft' license. It allows the user of the software to do whatever they like, so long as the project they are using our software with is ALSO distributed with the GNU GPL V3.0 license.</p> <p>Software that is also GNU GPL V3.0 licensed, must have the source code available for download.</p>","tags":["development","easy"]},{"location":"development/dev-vision/#continuous-integration-continuous-deployment","title":"Continuous Integration / Continuous Deployment","text":"<p>We've implemented CI/CD on some of our software to make it easier for code to be deployed. Once code is committed to the master or main branch, it is deployed to the correct server.</p> <p>This makes deployment very simple, but presents a few possibilities for errors to be introduced into the project.</p>","tags":["development","easy"]},{"location":"development/dev-vision/#mastermain-commit-protection","title":"Master/Main Commit Protection","text":"<p>For any repository with CI/CD implemented, it is a requirement that direct commits to the main/master (Which I will just call 'master' from now on) are DISALLOWED.</p> <p>If this rule was not implemented, broken code could be deployed to production, which can cause outages, data loss, or a damage to brand image.</p> <p>In this case where the master branch is protected, development should occur in a different branch, and code commits should be done through Pull Requests.</p> <p>Here are some suggested rules for CI/CD branch protection:</p> <ul> <li>For core services (CS++ Bot, Website, etc.), should require a code review by someone who isn't the Pull Request owner</li> <li>The following voters should also be added:<ul> <li>SonarQube</li> <li>Spell Check</li> <li>Link Resolution</li> <li>File Resolution</li> </ul> </li> </ul>","tags":["development","easy"]},{"location":"development/dev-vision/#testing","title":"Testing","text":"<p>We do not require any Unit or End-to-End tests on services, but there is no restriction on developing tests should you deem it necessary.</p> <p>If you have Unit and E2E tests, it would be advisory to add a test running step as a check in a PR.</p>","tags":["development","easy"]},{"location":"development/sonarqube/","title":"Using Sonarqube","text":"<p>TBF</p>","tags":["development","medium"]},{"location":"how-to/","title":"How To!","text":"<p>This section serves as a store for all of the 'how to' elements of System Administration, from things like SSHing in, to restoring from a power-loss, you'll find it here!</p>","tags":["how-to"]},{"location":"how-to/add-a-service/","title":"Add a Service","text":"<p>TBF</p>","tags":["how-to","sysadmin","easy"]},{"location":"how-to/add-a-user/","title":"How To: Add A User","text":"<p>Occasionally, you'll need to add users to a server. This doc will help you create a user, give them admin permission, add a user's SSH key, and let them run docker commands.</p>","tags":["how-to","easy","sysadmin"]},{"location":"how-to/add-a-user/#adduser","title":"Adduser","text":"<p>Once you're SSH'd into the correct server (If you do not know how to SSH, read this), run the following command:</p> Bash<pre><code>sudo adduser [USERNAME]\n</code></pre> <p>You will be prompted to enter your password (As you are running this command with <code>sudo</code>, which is administrator privileges.)</p> <p>You should then see the following output:</p> Text Only<pre><code>Adding user `[USERNAME]' ...\nAdding new group `USERNAME' (1234) ...\nAdding new user `USERNAME' (1234) with group `USERNAME' ...\nCreating home directory `/home/USERNAME' ...\nCopying files from `/etc/skel' ...\nNew password: \n</code></pre> <p>Set a simple password, with the following structure:</p> <p><code>Day-Object-####</code></p> <p>Replace the day with the Day of the week AND actual date, i.e. <code>Saturday06</code>, replace an the object with a random object in the room, such as <code>Charger</code>, and replace the hashtags with a 4 random numbers or letters.</p> <p>The password will not appear as you type it!</p>","tags":["how-to","easy","sysadmin"]},{"location":"how-to/add-a-user/#filling-in-their-details","title":"Filling in Their Details","text":"<p>Enter their full name, i.e. <code>Ru\u00e1n Murgatroyd</code> and leave the rest of the options blank (by just pressing enter.)</p> <p>Then verify the information is correct and type <code>Y</code>.</p>","tags":["how-to","easy","sysadmin"]},{"location":"how-to/add-a-user/#expiring-their-password","title":"Expiring Their Password","text":"<p>BEFORE YOU GIVE THE TEMPORARY PASSWORD TO THE USER</p> <p>You need to set the password to expire on first log in, to do this, run the following:</p> Bash<pre><code>sudo passwd --expire [USERNAME]\n\n# That is not a typo, it is passwd\n</code></pre> <p>It should output the following:</p> Text Only<pre><code>passwd: password expiry information changed.\n</code></pre>","tags":["how-to","easy","sysadmin"]},{"location":"how-to/add-a-user/#adding-an-ssh-key","title":"Adding an SSH Key","text":"<p>CS++ mandates SSH Key login for all committee. To make this possible, Sysadmins need to add their public key to the user.</p> <p>To do this, run the following commands:</p> Bash<pre><code># Go to the User's home directory\ncd /home/[USERNAME]/.ssh\n\n# Create a new file called authorized_keys (Yes, with a 'z')\ntouch authorized_keys\n</code></pre> <p>Now, get the public key from the user, it should look something like this:</p> Text Only<pre><code>ssh-ed25519 AAAAC3NzaC1GHDI1NTE5AAAAIFCSjHARHARGZFpRqFREdDyFaZBeaRhoATlk/+y01NKy bitflip@fun-machine\n</code></pre> <p>Copy that to your clipboard, go back to the terminal and run the following command:</p> Text Only<pre><code># Add they key to the user's authorised keys\necho [PASTE_PUBLIC_KEY_HERE] &gt; authorized_keys\n</code></pre>","tags":["how-to","easy","sysadmin"]},{"location":"how-to/add-a-user/#giving-admin-to-a-user","title":"Giving Admin to a User","text":"<p>In Linux, an administrator account is called a <code>sudoer</code>, as the commend you use to run something as an administrator is <code>sudo</code>.</p> <p>Warning</p> <p>This will give the user the ability to run ANY command with FULL permissions, only do this if you are CERTAIN you are adding the right person, and have permission to add them.</p> <p>If you want to make a user a sudoer, you add them to the '<code>sudo</code> group'!</p> <p>To do this, run the following command:</p> Bash<pre><code>sudo adduser [USERNAME] sudo\n</code></pre> <p>You may be prompted to enter your password.</p>","tags":["how-to","easy","sysadmin"]},{"location":"how-to/add-a-user/#letting-a-user-run-docker-commands","title":"Letting a User Run Docker Commands","text":"<p>If you want to make it easier for a user to run Docker commands without having to preface it with <code>sudo</code>, you can add the user to the Docker group:</p> Bash<pre><code># Before adding them to the Docker group:\nsudo docker images\n\n# Adding them to the Docker Group:\nsudo usermod -aG docker [USERNAME]\n\n# Now they can do this:\ndocker images\n</code></pre> <p>Like giving <code>sudo</code>, only give this to people who should be allowed to run Docker commands!</p> <p>Happy adding!</p>","tags":["how-to","easy","sysadmin"]},{"location":"how-to/contabo/","title":"How To: Use Contabo","text":"<p>Contabo\u00a0\u29c9 is our Cloud hosting provider of choice.</p> <p>Currently, it hosts Huey Dewey Louie, our cloud VPS (Virtual Private Server).</p> <p>This doc will explain what we use Contabo for, and common instructions for duties on Contabo.</p> <p>This is the Contabo side panel, everything in blue is for modifying current stuff, everything in yellow is for getting new stuff.</p> <p></p>","tags":["how-to","easy","sysadmin","hardware","cloud"]},{"location":"how-to/contabo/#controlling-a-vps","title":"Controlling a VPS","text":"<p>One of the most common tasks done on Contabo is Controlling a VPS.</p> <p>First, go to <code>VPS Control</code> in the <code>control panel</code> section of the side panel.</p> <p>This will list every VPS owned by the society, and provide common actions for them.</p>","tags":["how-to","easy","sysadmin","hardware","cloud"]},{"location":"how-to/contabo/#vps-controls","title":"VPS Controls","text":"<p>Above is all actions and information on the VPS that can be seen / done.</p> Item Purpose <code>Server</code> The IP Address of the Server <code>Default User</code> The default user, normally <code>root</code> <code>Host System</code> The actual physical server the VPS is running on. Only relevant when getting support. <code>Status</code> An icon showing whether the VPS is running or not. <code>Restart</code> A button that issues that restarts the VPS. <code>Start</code> A button that starts the VPS if it is off. <code>Stop</code> A button that stops the VPS. <code>Cloud-Init</code> Turns on cloud automation features. (Not used) <code>Reinstall</code> Install an OS on the VPS WARNING: This will delete all data on the VPS. Get permission before doing this! <code>Rescue System</code> Starts a secondary, 'rescue' system which helps you fix the OS, or pull data. <code>Snapshots</code> Captures a 'snapshot' (Full system copy) that deletes itself after 30 days. <code>Upgrade VPS</code> Allows you to change the specs of the VPS. <code>Move to other Region</code> Changes which data centre the VPS is running in. <code>Order Add-On</code> Get additional items for the VPS. <code>Order Windows</code> Purchases a Windows Server license. <code>I can't connect to this server</code> Provides helpful troubleshooting steps if you cannot connect to the VPS. <code>Password reset</code> Resets the password of the <code>Default user</code>. Use as a lifeboat! <code>Enable VNC</code> Enables an emergency, insecure, connection method to the VPS. Use as a lifeboat!","tags":["how-to","easy","sysadmin","hardware","cloud"]},{"location":"how-to/contabo/#what-do-we-normally-press","title":"What Do We Normally Press?","text":"<p>Admittedly, not much!</p> <p>You'll most often go on the VPS Controls to grab a snapshot before doing something which could cause:</p> <ul> <li>Data Loss</li> <li>Downtime</li> </ul> <p>The rest we will normally do through a terminal, such as restarting, starts &amp; stops, etc.</p> <p>We will VERY VERY rarely modify the specs &amp; addons for the VPS, as this changes the annual cost.</p> <p>The VPSes are spec'd out (Defining what they will do, what they need to do that, and adding some hardware buffers) before being acquired, so shouldn't need additional changes.</p>","tags":["how-to","easy","sysadmin","hardware","cloud"]},{"location":"how-to/contabo/#dns-zone-management","title":"DNS Zone Management","text":"<p>For all DNS related changes, read this guide.</p>","tags":["how-to","easy","sysadmin","hardware","cloud"]},{"location":"how-to/dns/","title":"How To: Modify DNS","text":"<p>This document will go over what DNS and Domains are, and how to add a subdomain to cspp.ie and host something on it, or have the domain redirect!</p> <p>DNS, or Domain Name System is a system which converts IP Addresses to the URLs that we all know and love, for example:</p> Bash<pre><code>nslookup\nDefault Server: UnKnown\nAddress: 1.1.1.1\n\n&gt; google.com\nName:    google.com\nAddresses:  2a00:1450:4009:826::200e\n          142.250.200.14\n</code></pre> <p>In this case, the IP Address for <code>google.com</code> is <code>142.250.200.14</code>.</p>","tags":["how-to","sysadmin","hard"]},{"location":"how-to/dns/#a-shortish-introduction-to-dns-and-domains","title":"A Short(ish) Introduction to DNS and Domains","text":"<p>CS++ currently owns the <code>cspp.ie</code> domain. This domain is broken down in two parts:</p> <p>TOP LEVEL DOMAIN: <code>.ie</code>, this is the two-letter code for Irish Websites.</p> <p>DOMAIN NAME: <code>cspp</code>, this is our unique domain name.</p> <p>You can add a thing called 'subdomains' to a domain, for example, this website is <code>docs.cspp.ie</code>, which is a Subdomain.</p>","tags":["how-to","sysadmin","hard"]},{"location":"how-to/dns/#what-do-we-use-domains-and-dns-for","title":"What Do We Use Domains and DNS For?","text":"<p>We use it to make it easy to access our services, such as our website, documentation, password manager, etc.</p> <p>The <code>cspp.ie</code> domain identifies everything using it as ours.</p> <p>We also sometimes use subdomains to make the lives of our members easier! The Discord server can be accessed at discord.cspp.ie\u00a0\u29c9, and so on!</p>","tags":["how-to","sysadmin","hard"]},{"location":"how-to/dns/#where-is-all-of-this-stored","title":"Where is All of This Stored?","text":"<p>The <code>cspp.ie</code> domain is bought from Smarthost\u00a0\u29c9 and paid for annually. As of right now, it is in the name of Ru\u00e1n Murgatroyd.</p> <p>We control our DNS records using Cloudflare. There are many options for this service, but cloudflare provides a lot of additional extras like DDOS protection and caching.</p>","tags":["how-to","sysadmin","hard"]},{"location":"how-to/dns/#adding-a-subdomain","title":"Adding a Subdomain","text":"<p>BE REALLY CAREFUL!!!</p> <p>Changes to DNS can cause long downtimes!</p> <p>Make sure you know what you're doing, and don't touch anything you're not actively working on!</p> <p>If possible, get a second set of eyes to go over everything you're doing!!!!</p> <ol> <li> <p>Log in to Cloudflare\u00a0\u29c9 with the CS++ account.</p> </li> <li> <p>Navigate to <code>DNS</code> through the sidebar</p> </li> </ol> <p>Here you'll see a list of all of our DNS info for <code>cspp.ie</code>. Let's add another!</p> <ol> <li> <p>Click '+ Add record'</p> </li> <li> <p>Enter the subdomain in the <code>Name</code> field and in the <code>Ipv4 address</code> field, put the IP Address of the server/computer you want to point at.</p> </li> </ol> <p>What Do These Fields Mean?</p> <p><code>Type</code>: The type of record. The simplest is an <code>A</code> record which translates a domain or subdomain to an IPv4 address. </p> <p><code>name</code>: The subdomain name. E.g. in <code>docs.cspp.ie</code>, <code>docs</code> is the subdomain. <code>@</code> refers to the 'root' or <code>cspp.ie</code> in this case.</p> <p><code>Priority:</code> The priority, used for mail records only.</p> <p><code>Data/IPv4 Address</code>: The data field. For <code>A</code> records this is the IPv4 address you want to point at.</p> <p><code>TTL</code>: Time-To-Live - How long the record will be stored by DNS servers before they go and ask again for the data.</p> <p>Learn more here: Cloudflare Docs - What are DNS records?\u00a0\u29c9.</p> <ol> <li>Once you have filled out all the data, click <code>save</code>.</li> </ol> <p>You have now created your first record, congrats! Right now it's pointing at a server, but the server doesn't respond with anything!</p>","tags":["how-to","sysadmin","hard"]},{"location":"how-to/dns/#running-a-service-on-the-subdomain","title":"Running a Service on the Subdomain","text":"<p>Now that we have a subdomain, we need to have something that we want to serve to people on it.</p> <p>For this example, we will run a basic NGINX container.</p> <p>SSH into the server you pointed the subdomain at (If you do not know how to SSH, read this).</p> <p>Now, run the following command:</p> Bash<pre><code>docker run -d -p [PORT]:80 -p [PORT_2]:443 --name SUBDOMAIN nginx\n</code></pre> <p>This will create an NGINX container (NGINX is a webserver). Replace <code>[PORT]</code> and <code>[PORT_2]</code> with port numbers, make sure these port numbers are not in use elsewhere on the system!</p> <p>This will then create an NGINX container, running on <code>PORT</code> and <code>PORT_2</code>. We now need to point the subdomain at these ports. This is called a 'Reverse Proxy'.</p>","tags":["how-to","sysadmin","hard"]},{"location":"how-to/dns/#setting-up-a-reverse-proxy","title":"Setting up a Reverse Proxy","text":"<p>To set up the reverse proxy, run the following command:</p> Bash<pre><code>cd /etc/nginx/sites-available\nsudo cp rp_template [SUBDOMAIN].cspp.ie\n</code></pre> <p>You may be prompted to enter your user password.</p> <p>Then open this file in a text editor like <code>nano</code> or <code>vim</code>.</p> <p>It will look like this:</p> Nginx Configuration File<pre><code>server {\n    server_name SUBDOMAIN.cspp.ie;\n\n    location / {\n        proxy_pass http://localhost:PORT;\n        include proxy_params;\n    }\n\n    listen 80;\n}\n</code></pre> <p>Replace SUBDOMAIN and PORT with the subdomain and <code>PORT</code> configured earlier, then save and exit the file.</p> <p>Make sure the <code>server_name</code> matches the name of the file!</p> <p>Now we need to enable this site.</p>","tags":["how-to","sysadmin","hard"]},{"location":"how-to/dns/#having-the-subdomain-redirect","title":"Having the Subdomain Redirect","text":"<p>For some cases, we don't want to host a service on this subdomain, but instead have it redirect. This may be for sites like <code>discord.cspp.ie</code> which redirects to our Discord server.</p> <p>In this case, the subdomain still points to the server, but we just redirect them.</p> <p>To set this up run the following:</p> Text Only<pre><code>cd /etc/nginx/sites-available\nsudo cp redirect_template [SUBDOMAIN].cspp.ie\n</code></pre> <p>When opening this new file in <code>nano</code> or <code>vim</code> (you will need to sudo), it will look like this:</p> Nginx Configuration File<pre><code>server {\n\n\u00a0 \u00a0 server_name SUBDOMAIN.cspp.ie;\n\n\u00a0 \u00a0 location / {\n\n\u00a0 \u00a0 rewrite ^/(.*) https://google.com/bla redirect;\n\n\u00a0 \u00a0 }\n\n\u00a0 \u00a0 listen 80;\n\n}\n</code></pre> <p>Change the server_name to match the filename (aka the subdomain that will redirect), then update the <code>https://google.com/bla</code> with the COMPLETE URL that you wish to redirect users to.</p> <p>Once this is done, continue following the instructions below.</p>","tags":["how-to","sysadmin","hard"]},{"location":"how-to/dns/#enabling-the-domain","title":"Enabling the Domain","text":"<p>We use <code>sites-available</code> and <code>sites-enabled</code> in NGINX for our domain configs.</p> <p><code>sites-available</code>:</p> <p>This stores the config files for each domain we serve.</p> <p><code>sites-enabled</code>:</p> <p>This allows the domain to be served.</p> <p>To do this, run the following command:</p> Bash<pre><code>sudo ln -s /etc/nginx/sites-available/[SUBDOMAIN].cspp.ie /etc/nginx/sites-enabled/\n</code></pre> <p>Make sure to use the FULL paths, instead of short-hand.</p> <p>Now, make sure the config works correctly with:</p> Bash<pre><code>sudo nginx -t\n</code></pre> <p>If the config is correct, it will return:</p> Text Only<pre><code>nginx: the configuration file /etc/nginx/nginx.conf syntax is ok\nnginx: configuration file /etc/nginx/nginx.conf test is successful\n</code></pre> <p>Then reload NGINX with:</p> Bash<pre><code>sudo systemctl reload nginx\n</code></pre> <p>You can now navigate to the site, but it will warn about no certificate! We need to enable HTTPS!</p>","tags":["how-to","sysadmin","hard"]},{"location":"how-to/dns/#enabling-https","title":"Enabling HTTPS","text":"<p>We use <code>certbot</code> from Let's Encrypt\u00a0\u29c9 for free TLS (that means HTTPS) certificates!</p> <p>Before you get started, if you are adding a new root domain, e.g. for another society, you'll need to switch <code>SSL encryption mode</code> to <code>Full</code> for that domain on the cloudflare dashboard.</p> <p>Run the following:</p> Bash<pre><code>sudo certbot --nginx\n</code></pre> <p>Which will output something like the following:</p> Text Only<pre><code>Saving debug log to /var/log/letsencrypt/letsencrypt.log\n\nWhich names would you like to activate HTTPS for?\nWe recommend selecting either all domains, or all domains in a VirtualHost/server block.\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n1: cspp.ie\n2: discord.cspp.ie\n3: www.cspp.ie\n4: [SUBDOMAIN].cspp.ie\n...\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nSelect the appropriate numbers separated by commas and/or spaces, or leave input\nblank to select all options shown (Enter 'c' to cancel):\n</code></pre> <p>You will want to generate a certificate for <code>[SUBDOMAIN].cspp.ie</code>, so type the number its number in (in this case <code>4</code>), and press enter.</p> <p>Assuming everything goes correctly, the following should display:</p> <p>This may take a while to actually run, please be patient!</p> Text Only<pre><code>Requesting a certificate for [SUDBDOMAIN].cspp.ie\n\nSuccessfully received certificate.\nCertificate is saved at: /etc/letsencrypt/live/[SUBDOMAIN].cspp.ie/fullchain.pem\nKey is saved at:         /etc/letsencrypt/live/[SUBDOMAIN].cspp.ie/privkey.pem\nThis certificate expires on 2024-10-04.\nThese files will be updated when the certificate renews.\nCertbot has set up a scheduled task to automatically renew this certificate in the background.\n\nDeploying certificate\nSuccessfully deployed certificate for [SUBDOMAIN].cspp.ie to /etc/nginx/sites-enabled/[SUBDOMAIN].cspp.ie\nCongratulations! You have successfully enabled HTTPS on https://[SUBDOMAIN].cspp.ie\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nIf you like Certbot, please consider supporting our work by:\n * Donating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate\n * Donating to EFF:                    https://eff.org/donate-le\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n</code></pre> <p>This TLS cert will automatically renew, so no need to worry!</p> <p>Navigate to your subdomain and see the 'Welcome to nginx!' page.</p> <p>Congratulations! You have successfully created your first subdomain!</p> <p>Happy domaining!</p>","tags":["how-to","sysadmin","hard"]},{"location":"how-to/faq/","title":"TBF","text":"","tags":["sysadmin","easy"]},{"location":"how-to/joining-committee/","title":"How To: Joining the Committee - Infrastructure","text":"<p>(This document is designed to be used by incoming CS++ Committee, if you're not that, you don't need to read it!)</p> <p>If you haven't heard it yet, congratulations! Welcome to the CS++ committee!</p> <p>This document will get you set up with the ability to connect to CS++ services through SSH. What is SSH? Find out here!</p>","tags":["how-to","easy","joining","committee"]},{"location":"how-to/joining-committee/#generating-your-key","title":"Generating Your Key","text":"<p>CS++ Committee who wish to connect to infrastructure must do so through key-based authentication.</p> <p>This key must first be generated.</p> <p>First open a terminal (Like 'Terminal' on MacOS, or 'PowerShell' on Windows. We will assume you will be using PowerShell if you are on Windows. Please, for your own sanity, do not use Command Prompt!)</p> <p>Once you open a terminal, run the following command:</p> Bash<pre><code>ssh-keygen -t ed25519\n</code></pre> <p>But what does this do?</p> <p>This runs the SSH key generation app.</p> <p>The <code>-t ed25519</code> tells the key generator to generate an <code>ed25519</code> key. You don't need to know what that is, but if you're curious\u00a0\u29c9.</p> <p>ANYWAY</p>","tags":["how-to","easy","joining","committee"]},{"location":"how-to/joining-committee/#where-to-save","title":"Where to Save?","text":"<p>One you run the command, the following should appear:</p> Text Only<pre><code>Generating public/private ed25519 key pair.\nEnter file in which to save the key (some/directory):\n</code></pre> <p>You first need to tell it where to store the keys. Generally, the default location is fine, they look something like this:</p> Text Only<pre><code>MacOS / Linux: /home/[your_name]/.ssh/id_ed25519\nWindows: (/c/Users/[your_name]/.ssh/id_ed25519)\n</code></pre> <p>If you want to leave it there, just press <code>ENTER</code>.</p>","tags":["how-to","easy","joining","committee"]},{"location":"how-to/joining-committee/#adding-a-password-to-your-key","title":"Adding a Password to Your Key","text":"<p>Once you have chosen your location, you will be prompted with the following:</p> Text Only<pre><code>Enter passphrase (empty for no passphrase):\n</code></pre> <p>This allows you to use a password to protect your key.</p> <p>But why would I use a password?</p> <p>If someone managed to steal your key, and it wasn't password protected, they would be able to log into the servers as you.</p> <p>What do you recommend?</p> <p>We recommend that you  use a password (That isn't your usual one!)</p> <p>If you want a password, type it in and press <code>ENTER</code>.</p> <p>If you do not want to use a password (for shame!), just press <code>ENTER</code>.</p> <p>The password section will remain blank as you type!</p> <p>You will then be prompted to re-enter your password, if you haven't given a password, just press <code>ENTER</code> again.</p> <p>Once that is done, it will tell you where it has saved your identification (Private Key), and your Public Key, and give you a little bit of art as a treat!</p>","tags":["how-to","easy","joining","committee"]},{"location":"how-to/joining-committee/#what-next","title":"What Next?","text":"<p>Well, here's the first thing you need to know after you generate your key.</p> <p>DO NOT SHARE YOUR PRIVATE KEY</p> <p>Your private key is the one WITHOUT <code>.pub</code>. Sharing your private key means anyone can use it to do whatever they like as you on CS++ infrastructure! Treat it like you do your passport, bank account, and passwords. Not even sysadmins or the chair need your private key!</p> <p>Okay, what do you really do next?</p>","tags":["how-to","easy","joining","committee"]},{"location":"how-to/joining-committee/#getting-it-added-to-cs-infrastructure","title":"Getting it Added to CS++ Infrastructure","text":"<p>Go to one of the Sysadmins, and send them two things:</p> <ul> <li>A username you want to go by</li> <li>Your public key (That's the file with the <code>.pub</code> file type!)</li> </ul> <p>The Sysadmin will then go somewhere, do funny magic, and let you know you can connect to CS++ services, ain't that just neat!</p>","tags":["how-to","easy","joining","committee"]},{"location":"how-to/joining-committee/#connecting-to-your-first-server","title":"Connecting to Your First Server","text":"<p>With all that done, you can now connect to your first server. To do this, read THIS guide.</p> <p>Happy joining!</p>","tags":["how-to","easy","joining","committee"]},{"location":"how-to/power-loss-checklist/","title":"TBF","text":"","tags":["sysadmin","medium","on-prem"]},{"location":"how-to/ssh/","title":"How To: SSH","text":"<p>We connect to our servers for many reasons:</p> <ul> <li>Updating the server or services</li> <li>Starting new services</li> <li>Other maintenance</li> <li>Investigations</li> <li>etc.</li> </ul> <p>To do this, we use a piece of software called Secure Shell (SSH)\u00a0\u29c9.</p> <p>The way SSH works is by essentially creating a terminal (Think Command Prompt) on the server that a terminal on your computer connects to. Cool, huh?</p> <p>Before we continue, please make sure you have followed the Setting up Technically Guide.</p>","tags":["how-to","easy","joining"]},{"location":"how-to/ssh/#your-first-connection","title":"Your First Connection","text":"<p>With your generated SSH key (For this doc, let's say my SSH Private Key is <code>/home/bitflip/.ssh/cspp</code>), open a terminal, like Terminal for MacOS or PowerShell for Windows.</p> <p>We're going to connect to our cloud server, <code>Huey Dewey Louie</code>!</p> <p>Then type the following command:</p> Bash<pre><code>ssh USERNAME@hdl.cspp.ie -i /home/bitflip/.ssh/cspp\n\n# Don't forget to change the path of the key with your path!\n</code></pre> <p>You'll see this big scary message that reads something like this:</p> Text Only<pre><code>The authenticity of host 'hdl.cspp.ie (158.220.114.253)' can't be established.\nED25519 key fingerprint is SHA256:AMbW9QGVEgxijwaoAgZijtzkS4RiHUpL80XVpluZCR0.\nAre you sure you want to continue connecting (yes/no/[fingerprint])?\n</code></pre> <p>Type the word <code>yes</code> and press <code>ENTER</code> to continue! This is you just confirming that you trust the server.</p> <p>Assuming your key was configured correctly, you'll see something like this:</p> Bash<pre><code>Welcome to Ubuntu 22.04.4 LTS (GNU/Linux 5.15.0-25-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/pro\n\n     _/_/_/    _/_/_/      _/          _/\n  _/        _/            _/          _/\n _/          _/_/    _/_/_/_/_/  _/_/_/_/_/\n_/              _/      _/          _/\n _/_/_/  _/_/_/        _/          _/\n\nWelcome CS++ Administrator!\n\nLast login: Fri Jul 5 17:19:39 2024 from \u2588\u2588\u2588.\u2588\u2588\u2588.\u2588\u2588\u2588.\u2588\u2588\u2588\nbitflip@huey-dewey-louie:~$\n</code></pre>","tags":["how-to","easy","joining"]},{"location":"how-to/ssh/#updating-your-password","title":"Updating Your Password","text":"<p>Since your account was just created, the Sysadmin should have given you a TEMPORARY PASSWORD. This password will require you to change it on first log in.</p> <p>It'll look like this:</p> Bash<pre><code>You are required to change your password immediately (administrator enforced).\nChanging password for USERNAME.\nCurrent password:\n</code></pre> <p>Enter your temporary password in <code>Current password:</code></p> <p>Then enter a new password for your user.</p> <p>The password section will remain blank as you type!</p> <p>You just made your first SSH connection to CS++ infrastructure, congrats!</p>","tags":["how-to","easy","joining"]},{"location":"how-to/ssh/#but-how-do-i-get-out","title":"But How Do I Get Out?","text":"<p>To disconnect, you can type the following:</p> Bash<pre><code>bitflip@huey-dewey-louie:~$ exit\n</code></pre> <p>You'll then see this in your terminal:</p> Bash<pre><code>logout\nConnection to hdl.cspp.ie closed.\n</code></pre> <p>You have now logged out!</p>","tags":["how-to","easy","joining"]},{"location":"how-to/ssh/#connecting-made-simple","title":"Connecting Made Simple","text":"<p>If you're going to SSH regularly, then you can create a config file for SSH.</p> <p>Go to where your <code>.ssh</code> folder is. On MacOS / Linux, it is normally <code>/home/[USERNAME]/.ssh</code>, for Windows, you'll find it in <code>/c/Users/[USERNAME]/.ssh</code></p> <p>Create a file called <code>config</code>, and open it in a text editor.</p> <p>If you want to connect to <code>Huey Dewey Louie</code> regularly, add the following:</p> Bash<pre><code>Host huey\n        Hostname hdl.cspp.ie\n        User [USERNAME]\n        IdentityFile [path/to/key]\n</code></pre> <p>Fill in the placeholders with your username on the server, and the path to your key, then save and close the file.</p> <p>Now open a terminal again and type:</p> Bash<pre><code>ssh huey\n</code></pre> <p>You'll be prompted to trust the server again, just type <code>yes</code> again, and you'll be greeted with the same CS++ Logo!</p> <p>It's so much easier to type than having to enter your username, domain of the server, and where your key is stored.</p>","tags":["how-to","easy","joining"]},{"location":"how-to/ssh/#connecting-to-other-servers","title":"Connecting to Other Servers","text":"<p>Head on over to the hardware section of these docs to get the domain / IP of the server you wish to connect to!</p> <p>Happy SSHing!</p>","tags":["how-to","easy","joining"]},{"location":"how-to/useful-commands/","title":"How To: Use Some Useful Commands","text":"<p>This doc will go over certain useful commands you may use on the infrastructure.</p>","tags":["how-to","easy","sysadmin"]},{"location":"how-to/useful-commands/#system-commands","title":"System Commands","text":"","tags":["how-to","easy","sysadmin"]},{"location":"how-to/useful-commands/#view-system-stats","title":"View System Stats","text":"<p>If you want to view CPU &amp; RAM usage, active processes, and system uptime, run the following command:</p> Bash<pre><code>top -i\n# -i will hide any inactive processes.\n</code></pre> <p>It will look something like this:</p> Text Only<pre><code>top - 11:52:41 up 57 days,  3:13,  1 user,  load average: 0.24, 0.20, 0.13\nTasks: 194 total,   1 running, 193 sleeping,   0 stopped,   0 zombie\n%Cpu(s):  0.5 us,  0.7 sy,  0.8 ni, 97.6 id,  0.0 wa,  0.0 hi,  0.1 si,  0.3 st\nMiB Mem :  16002.8 total,  14226.2 free,    905.5 used,    871.0 buff/cache\nMiB Swap:      0.0 total,      0.0 free,      0.0 used.  14757.2 avail Mem\n\n    PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND\n\u2588\u2588\u2588\u2588\u2588\u2588\u2588 netdata   \u2588\u2588  \u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588\u2588\u2588\u2588 \u2588   3.3   1.2 290:45.66 netdata\n</code></pre> Item Meaning <code>up</code> Show uptime in days <code>Tasks</code> Lists the total amount, running, sleeping, stopped and 'zombie' tasks <code>%CPU(s)</code> CPU utilisations <code>MiB Mem</code> Shows the total, free, used, and cached memory in KibiBytes (MiB) <code>MiB Swap</code> Shows the total, free, use, and available Swap\u00a0\u29c9 memory. Column Meaning <code>PID</code> Process ID <code>USER</code> User that started the process <code>PR</code> Process Priority <code>NI</code> 'Nice' value, another priority value <code>VIRT</code> Virtual Memory Size in KibiBytes (KiB) <code>RES</code> Resident Memory Size in KibiBytes (KiB) <code>SHR</code> Shared Memory Size in KibiBytes (KiB) <code>S</code> Process Status. ('D' = Uninterruptable sleep, 'R' = Running, 'S' = Sleeping, 'T' = Traced / Stopped, 'Z' = Zombie) <code>%CPU</code> CPU Utilisation in Percentage <code>%MEM</code> Memory Utilisation in Percentage <code>TIME+</code> Total CPU time used by the process, in hundredths of a second <code>COMMAND</code> The command used to start the process","tags":["how-to","easy","sysadmin"]},{"location":"how-to/useful-commands/#restarting-a-server","title":"Restarting a Server","text":"<p>When you want to restart a server, run the following command:</p> Bash<pre><code>sudo shutdown -r now\n# -r tells it to restart\n# now tells it to do it immediately\n</code></pre> <p>You will be instantly disconnected as the server shuts down and restarts.</p> <p>A restart may take a few minutes, so do be patient!</p> <p>After a restart, follow the restart / unexpected shutdown checklist!</p>","tags":["how-to","easy","sysadmin"]},{"location":"infrastructure/","title":"Infrastructure @ CS++","text":"<p>This section contains all infrastructure used by CS++, both on-premises, and in the cloud.</p>"},{"location":"infrastructure/cloud/huey-dewey-louie/","title":"Huey Dewey Louie","text":"<p>Huey Dewey Louie is CS++'s first server, running off Contabo\u00a0\u29c9.</p>","tags":["hardware","cloud"]},{"location":"infrastructure/cloud/huey-dewey-louie/#services","title":"Services","text":"<p>Huey Dewey Louie is currently running the following services:</p> <ul> <li>EveningBot</li> <li>HedgeDoc</li> <li>MorningBot</li> <li>Plume</li> <li>Starboard</li> <li>Vaultwarden</li> <li>BitHunt</li> </ul>","tags":["hardware","cloud"]},{"location":"infrastructure/cloud/huey-dewey-louie/#technical-specifications","title":"Technical Specifications","text":"Component Specification CPU 6 vCPU Cores RAM 16GB RAM Storage 600GB Solid State Drive (SSD) OS Ubuntu 20.04 Networking Infinite in, 32TB out @ 400 megabits per second (Mb/s) Region European Union (Germany)","tags":["hardware","cloud"]},{"location":"infrastructure/cloud/huey-dewey-louie/#ip-addresses-domains","title":"IP Addresses &amp; Domains","text":"","tags":["hardware","cloud"]},{"location":"infrastructure/cloud/huey-dewey-louie/#internal","title":"Internal","text":"<p>N/A</p>","tags":["hardware","cloud"]},{"location":"infrastructure/cloud/huey-dewey-louie/#external","title":"External","text":"<p><code>158.220.114.253</code></p> <p><code>158.220.114.254</code></p> <p><code>hdl.cspp.ie</code></p>","tags":["hardware","cloud"]},{"location":"infrastructure/on-prem/networking/udm-rps/","title":"Ubiquiti Redundant Power Supply","text":"Name Serial Number IP Address (Internal) Rack Unit # CSPP-PizzaDog ### 192.168.1.# 1 <p>The U-RPS</p>","tags":["admin","on-prem","networking"]},{"location":"infrastructure/on-prem/networking/udm-se/","title":"Ubiquiti Dream Machine - Special Edition","text":"Name Serial Number IP Address (Internal) IP Address (External) Rack Unit # CSPP-ShakeDog ### 192.168.1.1 147.252.#.# 3 <p>Our primary router is the UDM-SE\u00a0\u29c9. It is a 'Prosumer' grade router.</p> <p>All internet traffic is routed through it. Our uplink to HEANet\u00a0\u29c9 is on the 2.5Gb/s Port #9.</p>","tags":["admin","on-prem","networking","9"]},{"location":"infrastructure/on-prem/networking/udm-se/#updates","title":"Updates","text":"<p>ShakeDog will not automatically update. Network stability is critical, and downtime should be scheduled for any network firmware updates.</p>","tags":["admin","on-prem","networking","9"]},{"location":"infrastructure/on-prem/networking/udm-se/#backups","title":"Backups","text":"<p>ShakeDog backups are not yet configured. Here is the ideal backup policy: - Once per week - Whenever traffic is lowest on average - 10 weeks of backups</p>","tags":["admin","on-prem","networking","9"]},{"location":"infrastructure/on-prem/networking/udm-se/#features","title":"Features","text":"<ul> <li>8x GbE LAN Ports (2x PoE, 6x PoE+)</li> <li>2x 10Gb SPF+ Ports</li> <li>1x 2.5GbE WAN</li> <li>3.5\" Drive Bay for Network Video Recording</li> <li>Built in Wireguard, OpenVPN, Ubiquiti Teleport, and L2TP VPN Servers</li> <li>DHCP</li> <li>WAN Failover (Not utilised)</li> <li>Application-aware firewall rules</li> <li>Threat Detection</li> <li>Advanced filtering &amp; routing</li> <li>VLAN &amp; Subnet-based traffic segmentation</li> <li>Fully Stateful Firewall</li> <li>Internal DNS Server</li> </ul>","tags":["admin","on-prem","networking","9"]},{"location":"ownership/","title":"Ownership @ CS++","text":"<p>This area covers 'ownership' of CS++'s technical services.</p> <p>What is Ownership?</p> <p>In CS++, 'Ownership' is the concept of one or more people managing a service, system or object.</p> <p>After a period of acclimatising themself to the system they own, the Owner should be able to set and find ways to achieve goals related to this system. For a service, this may be uptime or recoverability, for hardware, this may be power-redundancy.</p> <p>Owners do not have to be experts on the system they own, but should instead be able to guide any growth or work related to the system.</p> <p>IMPORTANT NOTICE</p> <p>Just because someone is the 'owner' of the service / area doesn't mean they have to do ALL THE WORK. Instead, their aim is to ensure that the goals of the system they 'own' are achieved (I.e. for services this could be uptime, for hardware this could be proper power-redundancy, etc.)</p> <p>Owners can fully delegate work as they see fit!</p> <p>Why do we do Ownership?</p> <p>We use Ownership to ensure that everything we run gets its fair share of attention and maintenance.</p> <p>Ownership also adds something similar to a tiered structure to the flat-hierarchy of CS++'s System Administrators. While the input and experience from the Sysadmins and the entire committee on a system is good, to maximise speed, focus and 'vision', there should ideally be one or two people managing the decisions on everything.</p>","tags":["sysadmin","committee","ownership"]},{"location":"ownership/ownership-table/","title":"Ownership Table","text":"<p>This page contains the current list of Systems, Services &amp; Objects and their respective 'Owner'. For the theory of 'Ownership', see here.</p> Type Object Owner System DNS Jacey System Physical Infrastructure MJ &amp; D\u00e1ith\u00ed System OS Installs &amp; Configuration MJ &amp; D\u00e1ith\u00ed System Architecture MJ Service Bitwarden Jacey Service Website (Plume) D\u00e1ith\u00ed Service Game Servers Ana Service EveningBot Ana Service MorningBot MJ Service Plausible MJ &amp; Ana","tags":["sysadmin","ownership"]},{"location":"services/eveningbot/","title":"EveningBot","text":"<p>EveningBot\u00a0\u29c9, forked from ana-rchy/eveningbot\u00a0\u29c9 is a Discord bot that is '<code>evil and fucked up</code>'.</p> <p>It is hosted for Game Dev Soc's Discord.</p> <p>It has CI/CD set up on the CS++ fork to automatically deploy new stable versions.</p>","tags":["services"]},{"location":"services/hedgedoc/","title":"HedgeDoc","text":"<p>HedgeDoc\u00a0\u29c9 is a collaborative markdown text editor.</p> <p>It can be used for shared notes within the society.</p> <p>It can be found here\u00a0\u29c9</p>","tags":["services"]},{"location":"services/mkdocs/","title":"MkDocs","text":"<p>MkDocs is this docs page. It is hosted on GitHub pages through CI/CD, and is aliased to docs.cspp.ie\u00a0\u29c9.</p> <p>This aliasing is done through a <code>CNAME</code> DNS record with the value set to <code>cs-soc-tudublin.github.io</code>.</p> <p>As a mission-critical service, these docs are hosted outside of CS++ infrastructure, meaning they can still be accessed if all CS++ infrastructure goes down.</p>","tags":["services","critical"]},{"location":"services/morningbot/","title":"MorningBot","text":"<p>MorningBot\u00a0\u29c9 is a Discord Bot that reacts to 'Good Morning' (and other) messages between 06:00 and 13:00 every day.</p> <p>It tracks a leaderboard of all Good Morningers.</p>","tags":["services"]},{"location":"services/plume/","title":"Plume","text":"<p>Plume\u00a0\u29c9 is CS++'s official website. Written in 11ty, and forked from Redbrick's Atlas\u00a0\u29c9, it acts as the face of who CS++ is.</p> <p>It shows memories of the society, and links to our social media. It also shows the current committee.</p> <p>It has properly configured CI/CD system through GitHub Actions, so any pushes to <code>main</code> will trigger automatic building and deployment.</p> <p>It can be found here\u00a0\u29c9</p>","tags":["services","critical"]},{"location":"services/starboard/","title":"Starboard","text":"<p>Starboard\u00a0\u29c9 is an open source web app which allows you to give or remove stars from people / groups.</p> <p>You can also create tasks that these people can complete.</p> <p>It is used by the Societies Office during BICS.</p> <p>It can be found at stars.societies.ie\u00a0\u29c9</p>","tags":["services"]},{"location":"services/vaultwarden/","title":"VaultWarden","text":"<p>VaultWarden\u00a0\u29c9 is a free and open source version of BitWarden Server.</p> <p>Written in the Rust programming language, it touts itself as faster, more effecient, and easier to containerise than the standard BitWarden Server.</p> <p>In CS++, we use VaultWarden to store the passwords for all society-based accounts.</p> <p>By policy, the VaultWarden is ONLY for current Committee on the Society.</p> <p>Committee members must create an account with their student e-mail.</p> <p>VaultWarden can be found at vault.cspp.ie\u00a0\u29c9</p>","tags":["services","critical"]}]}