{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#cs-docs","title":"CS++ Docs","text":"<p>Welcome to CS++'s documentation!</p> <p>This is where all of our public documentation relies.</p> <p>We write our docs along a 'layer' style. Each layer builds atop the ones below it to completely describe our infrastructure. Starting at the hardware layer, and finishing with 'Paving', how we deploy our services. This allows us to build a complete knowledge-base to train Sysadmins and support our members!</p> <p>No Prior Knowledge Needed!</p> <p>These docs are written with the assumption that you have never done any kind of System Administration before!</p> <p>As such, we try keep explanations simple, provide extra reading where needed, and show what outputs should look like when you run commands!</p> <p>Feel free to ask for help from others, or look up what you need!</p> <p>This is mostly intended for the sysadmins / core committee. But feel free to read up on how we roll.</p>"},{"location":"#for-committee-sysadmins-and-the-curious","title":"For Committee, Sysadmins and the Curious","text":"<p>Where should I start?</p> <p>If you're looking to start from the very beginning, consider LAYER ZERO - Servers, Server Components and Networking.</p> <p>Or, if you're curious on our approach to writing our docs, you can read that here</p> <p>Otherwise, browse around!</p>"},{"location":"contact/","title":"Contact Us","text":"<p>If you have any questions or comments, please contact us at comp@societies.tudublin.ie\u00a0\u2709. Or you can join the Discord server\u00a0\u29c9!</p>"},{"location":"docs-vision/","title":"DOCS - Our Philosophy","text":"<p>Rant warning!</p> <p>This page is more a manifesto about writing documentation instead of actual documentation on how CS++ operates. Don't be radicalised!</p> <p>In tech, documentation is at the core of building a stable and reproducible system that can be restored, expanded and maintained by a totally new set of people than the original creators.</p> <p>In a worst case scenario, if the society was mothballed for a few years and all that was there was the hardware in the rack and none of the original sysadmin, the new generation should be able to use these docs to bring the servers back, and understand how and why they're doing each step.</p> <p>This is commonly called the 'hit by a bus philosophy'</p>","tags":["meta"]},{"location":"docs-vision/#heavy-vehicle-road-traffic-incidents","title":"Heavy Vehicle Road Traffic Incidents","text":"<p>The Bus Factor\u00a0\u29c9 is a risk model that boils down to 'What if this person wasn't here anymore?' and aims to identify critical people or bits of knowledge that have not been shared, with the purpose of sharing this information.</p> <p>The best way to share information is to tell others, and one of the best ways to do this when in a society or working on systems with lots of moving parts is documentation.</p>","tags":["meta"]},{"location":"docs-vision/#do-we-need-to-care-about-heavy-vehicle-road-traffic-incidents","title":"Do We Need to Care about Heavy Vehicle Road Traffic Incidents?","text":"<p>CS++ has at least one recorded case of dying and being revived, and this leading to  loss of technical information.</p> <p>CS++ was restored in March of 2022, dying in ~2020 as 'Comp Soc'. At that time, the society had multiple server (About 12) in their own server room in Aungier Street.</p> <p>When the society was restored, no-one knew the room or even the hardware existed, and now it's become our server room!</p>","tags":["meta"]},{"location":"docs-vision/#looking-both-ways","title":"Looking Both Ways","text":"<p>In Societies, the average turnover is about four years. That is a brand new committee every four years, and that's not a long time!</p> <p>This makes it hard to do long-term planing, and instead Societies grow through incremental improvements and proper handover.</p> <p>For CS++, where we run mission critical software not just for us but for others, it is just as important if not more to write and update the documentation and train the successors! You do not want a single point of failure that when a sysadmin graduates, the ability to securely network servers is lost forever.</p> <p>Writing docs is part of the obligations of sysadmins, updating them as hardware, services, and procedures change.</p> <p>In a perfect world, all of the current sysadmins could be hit by a bus, and the replacement sysadmins would be able to use these docs (And private docs stored internally) to find the Server Room, get access and both learn and rebuild the entire technical stack from scratch.</p>","tags":["meta"]},{"location":"docs-vision/#brick-by-brick","title":"Brick by Brick","text":"<p>These docs are organised in Layers (like onions!). Each layer builds upon eachother. Starting on the hardware that runs the show, and ending on how to make your life easier when maintaining a cluster.</p> <p>You can't automate tasks when you don't have tasks to do. You have no tasks without having services. You have no services without an Operating System. You have no Operating System without Hardware.</p> <p>And you cannot understand any portion of that unless you also understand what it's built on.</p> <p>These docs start at a very simple level, with LAYER ZERO - Hardware, explaining the concepts behind servers &amp; networking at a First-Year level without assuming prior knowledge.</p> <p>Each layer builds atop eachother until the whole stack is known and understood.</p> <p>So, from nothing, you should be able to pass the 'First Year test', and give an average First Year student these docs, a broken system, and they should be able to understand them and fix what does not work.</p>","tags":["meta"]},{"location":"docs-vision/#inertia-and-interest","title":"Inertia and Interest","text":"<p>Writing docs takes a long time, and writing docs of this scale is even harder.</p> <p>Once the majority of docs are written, there remains inertia to keep them up-to-date. Without updates as things change, the docs begin to drift from what is canon, and can lead maintainers down the wrong paths.</p> <p>Docs are the most holy runbook, and also the most verbose! So making the edits as things change allows your legacy and work to remain within the society.</p>","tags":["meta"]},{"location":"development/dev-vision/","title":"Developing for CS++","text":"<p>Developing software for CS++ provides a unique opportunity to develop active production code.</p> <p>Nearly all bespoke software developed for the society goes on to be used actively.</p> <p>As such, it is important to have a universal development policy which ensures that the development and deployment process remain secure, but also convenient.</p>","tags":["development","easy"]},{"location":"development/dev-vision/#open-source-free-as-in-freedom","title":"Open Source, Free as in Freedom","text":"<p>We actively attempt to contribute to Open Source, and most projects we develop (unless they contain secrets that cannot be abstracted away) are public on the GitHub Organisation.</p> <p>In-Dev projects are normally set to private until they are more feature-complete.</p>","tags":["development","easy"]},{"location":"development/dev-vision/#licensing","title":"Licensing","text":"<p>By default, most CS++ projects will be GNU GPL V3.0 licensed.</p> <p>This is normally called a 'copyleft' license. It allows the user of the software to do whatever they like, so long as the project they are using our software with is ALSO distributed with the GNU GPL V3.0 license.</p> <p>Software that is also GNU GPL V3.0 licensed, must have the source code available for download.</p>","tags":["development","easy"]},{"location":"development/dev-vision/#continuous-integration-continuous-deployment","title":"Continuous Integration / Continuous Deployment","text":"<p>We've implemented CI/CD on some of our software to make it easier for code to be deployed. Once code is committed to the master or main branch, it is deployed to the correct server.</p> <p>This makes deployment very simple, but presents a few possibilities for errors to be introduced into the project.</p>","tags":["development","easy"]},{"location":"development/dev-vision/#mastermain-commit-protection","title":"Master/Main Commit Protection","text":"<p>For any repository with CI/CD implemented, it is a requirement that direct commits to the main/master (Which I will just call 'master' from now on) are DISALLOWED.</p> <p>If this rule was not implemented, broken code could be deployed to production, which can cause outages, data loss, or a damage to brand image.</p> <p>In this case where the master branch is protected, development should occur in a different branch, and code commits should be done through Pull Requests.</p> <p>Here are some suggested rules for CI/CD branch protection:</p> <ul> <li>For core services (CS++ Bot, Website, etc.), should require a code review by someone who isn't the Pull Request owner</li> <li>The following voters should also be added:<ul> <li>Spell Check</li> <li>Link Resolution</li> <li>File Resolution</li> </ul> </li> </ul> <p>A 'voter' is a single GitHub Action which runs and 'votes' on whether or not this Pull Request should be merged. If it passes, that's a vote in favour, if it fails, that's a vote against.</p>","tags":["development","easy"]},{"location":"development/dev-vision/#testing","title":"Testing","text":"<p>In the industry, code is tested before it is merged into the main branch. This requires a lot of additional time to write tests and maintain them. So, while encouraged, this is not mandatory.</p> <p>We do not require any Unit or End-to-End tests on services, but there is no restriction on developing tests should you deem it necessary.</p> <p>If you have Unit and E2E tests, it would be advisory to add a test running step as a check in a PR.</p>","tags":["development","easy"]},{"location":"layer-one/","title":"LAYER ONE - Operating Systems and Storage","text":"<p>To use a server, you need an Operating System, and to put an OS on a server you need Storage.</p> <p>This section covers the Operating Systems we use, how to access them both in-person and remotely, what they can do, how to (re)install them and more!</p>","tags":["one","os","storage"]},{"location":"layer-three/","title":"LAYER THREE - Infrastructure as Code","text":"<p>Now we have services running, that's great! You're actually serving content to the billions of people on the internet.</p> <p>Once things are actually running, your priorities shift to two things:</p> <ol> <li>How do we maintain what we've already got?</li> <li>How do we make it easier to maintain and run new things?</li> </ol> <p>This section covers Deploying our services, Tasks and Jobs that run manually or automatically, and Runbooks which make our lives easier.</p>","tags":["three","infrastructure-as-code","iac"]},{"location":"layer-two/","title":"LAYER TWO - Bootstrapping a Private Cloud","text":"<p>Having an Operating System is all well and good, but now the question is how do we actually run things on these metal boxes?</p> <p>This section covers how we actually run Services, and keep them Highly-Available by Clustering the servers.</p>","tags":["two","private-cloud"]},{"location":"one/","title":"LAYER ONE - Operating Systems and Storage","text":"<p>To use a server, you need an Operating System, and to put an OS on a server you need Storage.</p> <p>This section covers the Operating Systems we use, how to access them both in-person and remotely, what they can do, how to (re)install them and more!</p>","tags":["one","os","storage"]},{"location":"ownership/","title":"Ownership @ CS++","text":"<p>This area covers 'ownership' of CS++'s technical services.</p> <p>What is Ownership?</p> <p>In CS++, 'Ownership' is the concept of one or more people managing a service, system or object.</p> <p>After a period of acclimatising themselves to the system they own, the Owner should be able to set and find ways to achieve goals related to this system. For a service, this may be uptime or recoverability, for hardware, this may be power-redundancy.</p> <p>Owners do not have to be experts on the system they own, but should instead be able to guide any growth or work related to the system.</p> <p>IMPORTANT NOTICE</p> <p>Just because someone is the 'owner' of the service / area doesn't mean they have to do ALL THE WORK. Instead, their aim is to ensure that the goals of the system they 'own' are achieved (I.e. for services this could be uptime, for hardware this could be proper power-redundancy, etc.)</p> <p>Owners can fully delegate work as they see fit!</p> <p>Why do we do Ownership?</p> <p>We use Ownership to ensure that everything we run gets its fair share of attention and maintenance.</p> <p>Ownership also adds something similar to a tiered structure to the flat-hierarchy of CS++'s System Administrators. While the input and experience from the Sysadmins and the entire committee on a system is good, to maximise speed, focus and 'vision', there should ideally be one or two people managing the decisions on everything.</p>","tags":["sysadmin","committee","ownership"]},{"location":"ownership/ownership-table/","title":"Ownership Table","text":"<p>This page contains the current list of Systems, Services &amp; Objects and their respective 'Owner'. For the theory of 'Ownership', see here.</p> <p>TODO: Update ownership table &amp; reweight to equally divide work</p> Type Object Owner System DNS Ru\u00e1n System Physical Infrastructure MJ &amp; D\u00e1ith\u00ed System OS Installs &amp; Configuration MJ &amp; D\u00e1ith\u00ed System Architecture Ru\u00e1n Service Bitwarden Ru\u00e1n Service Website (Plume) D\u00e1ith\u00ed Service EveningBot Ru\u00e1n Service MorningBot Ru\u00e1n Service Plausible Ru\u00e1n","tags":["sysadmin","ownership"]},{"location":"procedures/","title":"How To!","text":"<p>This section covers common steps and procedures admins (and users!) need to do, from adding users, to SSHing in, and committee onboarding.</p>","tags":["how-to"]},{"location":"procedures/joining-committee/","title":"HOW TO: Joining the General Committee - Infrastructure","text":"<p>(This document is designed to be used by incoming CS++ Committee, if you're not that, you don't need to read it!)</p> <p>If you haven't heard it yet, congratulations! Welcome to the CS++ committee!</p> <p>This document will get you set up with the ability to connect to CS++ services through SSH. What is SSH? Find out here!</p>","tags":["how-to","easy","joining","committee"]},{"location":"procedures/joining-committee/#generating-your-key","title":"Generating Your Key","text":"<p>CS++ Committee who wish to connect to infrastructure must do so through key-based authentication.</p> <p>This key must first be generated.</p> <p>First open a terminal (Like 'Terminal' on MacOS, or 'PowerShell' on Windows. We will assume you will be using PowerShell if you are on Windows. Please, for your own sanity, do not use Command Prompt!)</p> <p>Once you open a terminal, run the following command:</p> Bash<pre><code>ssh-keygen -t ed25519\n</code></pre> <p>But what does this do?</p> <p>This runs the SSH key generation app.</p> <p>The <code>-t ed25519</code> tells the key generator to generate an <code>ed25519</code> key. You don't need to know what that is, but if you're curious\u00a0\u29c9.</p> <p>ANYWAY</p>","tags":["how-to","easy","joining","committee"]},{"location":"procedures/joining-committee/#where-to-save","title":"Where to Save?","text":"<p>One you run the command, the following should appear:</p> Text Only<pre><code>Generating public/private ed25519 key pair.\nEnter file in which to save the key (some/directory):\n</code></pre> <p>You first need to tell it where to store the keys. Generally, the default location is fine, they look something like this:</p> Text Only<pre><code>MacOS / Linux: /home/[your_name]/.ssh/id_ed25519\nWindows: (/c/Users/[your_name]/.ssh/id_ed25519)\n</code></pre> <p>If you want to leave it there, just press <code>ENTER</code>.</p>","tags":["how-to","easy","joining","committee"]},{"location":"procedures/joining-committee/#adding-a-password-to-your-key","title":"Adding a Password to Your Key","text":"<p>Once you have chosen your location, you will be prompted with the following:</p> Text Only<pre><code>Enter passphrase (empty for no passphrase):\n</code></pre> <p>This allows you to use a password to protect your key.</p> <p>But why would I use a password?</p> <p>If someone managed to steal your key, and it wasn't password protected, they would be able to log into the servers as you.</p> <p>What do you recommend?</p> <p>We recommend that you  use a password (That isn't your usual one!)</p> <p>If you want a password, type it in and press <code>ENTER</code>.</p> <p>If you do not want to use a password (for shame!), just press <code>ENTER</code>.</p> <p>The password section will remain blank as you type!</p> <p>You will then be prompted to re-enter your password, if you haven't given a password, just press <code>ENTER</code> again.</p> <p>Once that is done, it will tell you where it has saved your identification (Private Key), and your Public Key, and give you a little bit of art as a treat!</p>","tags":["how-to","easy","joining","committee"]},{"location":"procedures/joining-committee/#what-next","title":"What Next?","text":"<p>Well, here's the first thing you need to know after you generate your key.</p> <p>DO NOT SHARE YOUR PRIVATE KEY</p> <p>Your private key is the one WITHOUT <code>.pub</code>. Sharing your private key means anyone can use it to do whatever they like as you on CS++ infrastructure! Treat it like you do your passport, bank account, and passwords. Not even sysadmins or the chair need your private key!</p> <p>Okay, what do you really do next?</p>","tags":["how-to","easy","joining","committee"]},{"location":"procedures/joining-committee/#getting-it-added-to-cs-infrastructure","title":"Getting it Added to CS++ Infrastructure","text":"<p>Go to one of the Sysadmins, and send them two things:</p> <ul> <li>A username you want to go by (If you haven't already given one)</li> <li>Your public key (That's the file with the <code>.pub</code> file type!)</li> </ul> <p>The Sysadmin will then go somewhere, do funny magic, and let you know you can connect to CS++ services, ain't that just neat!</p>","tags":["how-to","easy","joining","committee"]},{"location":"procedures/joining-committee/#connecting-to-your-first-server","title":"Connecting to Your First Server","text":"<p>With all that done, you can now connect to your first server. To do this, read THIS guide.</p> <p>Happy joining!</p>","tags":["how-to","easy","joining","committee"]},{"location":"procedures/onboarding-committee/","title":"Onboarding committee","text":"<ol> <li>Fill out committee registration</li> <li>Add to Socs Portal as Committee</li> <li>Give Committee role on Discord</li> <li>Add to Password Manager</li> <li>Add to GH Org</li> </ol>"},{"location":"procedures/onboarding-sysadmins/","title":"Onboarding sysadmins","text":"<ol> <li>All from Onboarding Committee</li> <li>SSH Key Generation</li> <li>Adding to nodes</li> <li>Updating VM Templates</li> <li>Giving Server Room Key</li> </ol>"},{"location":"procedures/useful-commands/","title":"HOW TO: Use Some Useful Commands","text":"<p>This doc will go over certain useful commands you may use on the infrastructure.</p>","tags":["how-to","easy","sysadmin"]},{"location":"procedures/useful-commands/#system-commands","title":"System Commands","text":"","tags":["how-to","easy","sysadmin"]},{"location":"procedures/useful-commands/#view-system-stats","title":"View System Stats","text":"<p>If you want to view CPU &amp; RAM usage, active processes, and system uptime, run the following command:</p> Bash<pre><code>top -i\n# -i will hide any inactive processes.\n</code></pre> <p>It will look something like this:</p> Text Only<pre><code>top - 11:52:41 up 57 days,  3:13,  1 user,  load average: 0.24, 0.20, 0.13\nTasks: 194 total,   1 running, 193 sleeping,   0 stopped,   0 zombie\n%Cpu(s):  0.5 us,  0.7 sy,  0.8 ni, 97.6 id,  0.0 wa,  0.0 hi,  0.1 si,  0.3 st\nMiB Mem :  16002.8 total,  14226.2 free,    905.5 used,    871.0 buff/cache\nMiB Swap:      0.0 total,      0.0 free,      0.0 used.  14757.2 avail Mem\n\n    PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND\n\u2588\u2588\u2588\u2588\u2588\u2588\u2588 netdata   \u2588\u2588  \u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588\u2588\u2588\u2588 \u2588   3.3   1.2 290:45.66 netdata\n</code></pre> Item Meaning <code>up</code> Show uptime in days <code>Tasks</code> Lists the total amount, running, sleeping, stopped and 'zombie' tasks <code>%CPU(s)</code> CPU utilisations <code>MiB Mem</code> Shows the total, free, used, and cached memory in KibiBytes (MiB) <code>MiB Swap</code> Shows the total, free, use, and available Swap\u00a0\u29c9 memory. Column Meaning <code>PID</code> Process ID <code>USER</code> User that started the process <code>PR</code> Process Priority <code>NI</code> 'Nice' value, another priority value <code>VIRT</code> Virtual Memory Size in KibiBytes (KiB) <code>RES</code> Resident Memory Size in KibiBytes (KiB) <code>SHR</code> Shared Memory Size in KibiBytes (KiB) <code>S</code> Process Status. ('D' = Uninterruptable sleep, 'R' = Running, 'S' = Sleeping, 'T' = Traced / Stopped, 'Z' = Zombie) <code>%CPU</code> CPU Utilisation in Percentage <code>%MEM</code> Memory Utilisation in Percentage <code>TIME+</code> Total CPU time used by the process, in hundredths of a second <code>COMMAND</code> The command used to start the process","tags":["how-to","easy","sysadmin"]},{"location":"procedures/useful-commands/#restarting-a-server","title":"Restarting a Server","text":"<p>When you want to restart a server, run the following command:</p> Bash<pre><code>sudo shutdown -r now\n# -r tells it to restart\n# now tells it to do it immediately\n</code></pre> <p>You will be instantly disconnected as the server shuts down and restarts.</p> <p>A restart will take a few minutes, so be patient!</p> <p>After a restart, follow the restart / unexpected shutdown checklist!</p>","tags":["how-to","easy","sysadmin"]},{"location":"three/","title":"LAYER THREE - Infrastructure as Code","text":"<p>Now we have services running, that's great! You're actually serving content to the billions of people on the internet.</p> <p>Once things are actually running, your priorities shift to two things:</p> <ol> <li>How do we maintain what we've already got?</li> <li>How do we make it easier to maintain and run new things?</li> </ol> <p>This section covers Deploying our services, Tasks and Jobs that run manually or automatically, and Runbooks which make our lives easier.</p>","tags":["three","infrastructure-as-code","iac"]},{"location":"two/","title":"LAYER TWO - Bootstrapping a Private Cloud","text":"<p>Having an Operating System is all well and good, but now the question is how do we actually run things on these metal boxes?</p> <p>This section covers how we actually run Services, and keep them Highly-Available by Clustering the servers.</p>","tags":["two","private-cloud"]},{"location":"zero/","title":"LAYER ZERO - Networking, Servers, and Their Components","text":"<p>At the core of everything technical is physical hardware.</p> <p>If for whatever reason the whole system collapses. This is your entrypoint to bringing everything back.</p> <p>This section covers all of CS++'s physical hardware that we use to run the society.</p> <p>It includes common tasks you might need to complete on the hardware, such as racking and unracking, hardware upgrades, troubleshooting, maintenance, decommissioning and more!</p>","tags":["zero","hardware","networking"]},{"location":"zero/#where-do-i-start","title":"Where Do I Start?","text":"<p>Well, the first question you should get the answer to is what is a server?</p>","tags":["zero","hardware","networking"]},{"location":"zero/server-components/","title":"WHAT IS IN A SERVER?","text":"<p>(This page expects some knowledge of PC hardware)</p> <p>Servers share most parts with other CPUs, but they're usually specialised to Server usecases. Let's talk about the primary differences.</p>","tags":["zero","hardware","server"]},{"location":"zero/server-components/#cpu","title":"CPU","text":"<p>Servers regularly have anywhere from 1 to 2 CPUs, though occasionally go higher. The motherboards in servers with multiple sockets are able to properly direct instructions and data to multiple CPUs.</p> <p>Server-grade CPUs are normally on-par with consumer-grade CPUs, but make up for it when it comes to Core and Thread count. For example, <code>Mallard</code> has 2 CPUs, each with 24 cores and 48 threads. That's 96 threads in a single server!</p> <p>They will usually also have larger caches.</p> <p>Atop this are other optimisations like multi-threading, better continuous operation, higher RAM limits, etc.</p>","tags":["zero","hardware","server"]},{"location":"zero/server-components/#ram","title":"RAM","text":"<p>The largest difference between consumer RAM and server RAM is the 'Error Correcting Code', or ECC feature.</p> <p>ECC constantly checks the contents of the RAM for any incorrect bits and fixes them. This comes at the cost of speed and money. But these are acceptable costs when you need to make sure you do not have incorrect memory crashing application, or writing incorrect values to essential databases.</p>","tags":["zero","hardware","server"]},{"location":"zero/server-components/#storage","title":"Storage","text":"<p>Interestingly, server storage is very similar to PC storage. NVMes, HDDs and SSDs are very common. But the method of communication is often different.</p> <p>All consumer drives use SATA (Serial Advanced Technology Attachment) which can run at a maximum of 6Gb/s.</p> <p>Servers need drives that can read and write at high speeds, and are reliable, so the main interface for storage is SAS (Serial Attached SCSI) which can run at a maximum of 22.5Gb/s (Though none of our servers can handle that speed). Even SAS Hard-Disk Drives can operate at SAS-3 (12GB/s) speeds by moving at 15,000RPM.</p> <p>Servers regularly have significantly more slots for storage, and support 'RAID' (Redundant Array of Independent Disks) which allows you to combine disks together to act as a single disk. This allows you to handle drive failures and improve read / write speeds.</p>","tags":["zero","hardware","server"]},{"location":"zero/server-components/#power-supply-units","title":"Power Supply Units","text":"<p>Servers almost always have 2 or more PSUs. A single PSU can run the entire server on it's own.</p> <p>Redundancy is the name of the game when it comes to servers, and it should be able to automatically switch to the other PSU with no downtime.</p> <p>These PSUs are normally connected to separate sources of power on separate breakers, and usually one or more of the PSUs are connected to a battery backup (UPS).</p> <p>Data Loss and OS Corruptions would be disastrous for servers, and servers aren't designed to handle sudden power loss events, so battery backups give the servers a few minutes (normally no more than 15 minutes) to finish what it is doing, and gracefully shutdown.</p>","tags":["zero","hardware","server"]},{"location":"zero/server-components/#network-interface-cards","title":"Network Interface Cards","text":"<p>Everything to do with technology is online now, so servers need to be able to receive lots of data and transmit lots of data.</p> <p>Servers have NICs (Network Interface Cards) which connect to the local network. There are two types of ports on NICs, RJ45\u00a0\u29c9 (Ethernet) ports, and SFP\u00a0\u29c9 (Small Form-factor Pluggable) ports. The RJ45 ports rarely exceed 1 - 2.5Gb/s, but the SFP ports regularly exceed 10Gb/s (25, 40, and 100GB/s).</p> <p>SFP ports allow multiple connectors to be attached, from RJ45 adapters, to Copper and Fibre Optic.</p> <p>Servers normally have multiple NICs for redundancy, and the multiple ports may be utilised in a way where only one port is connected to the internet, and the other ports are used for faster local-only communications.</p>","tags":["zero","hardware","server"]},{"location":"zero/server-components/#idrac-ilo","title":"iDRAC / iLO","text":"<p>To allow remote control and monitoring of a server at a hardware level (Including setting fan speeds, installing OSes, rebooting, etc.), all servers have a mini-computer inside of it that can be accessed remotely to complete these tasks.</p> <p>For Dell, this is called the iDRAC (Integrated Dell Remote Access Controller), and for HP, iLO (Integrated Lights Out).</p> <p>These are powered if the server is getting power (Even if the server is off!) and has it's own connection to the network.</p>","tags":["zero","hardware","server"]},{"location":"zero/server-components/#peripherals","title":"Peripherals","text":"<p>Most servers use old standards for I/O. All of our servers have VGA\u00a0\u29c9, invented in 1987 for displays, and many older servers use PS/2\u00a0\u29c9 for Keyboards and Mice, but our servers use USB thankfully.</p> <p>Some servers still even have Serial\u00a0\u29c9.</p> <p>Modern technologies and ports use more intensive communications standards, so it's better to use simple standards. This also means customers with thousands of servers do not need to spend a lot of money on upgrading all of their connectors when buying new servers.</p> <p>If it ain't broke, don't fix it!</p>","tags":["zero","hardware","server"]},{"location":"zero/server-components/#what-next","title":"What Next?","text":"<p>How do we spec a server?</p>","tags":["zero","hardware","server"]},{"location":"zero/server-specs/","title":"HOW DO WE SPEC A SERVER?","text":"<p>Servers are usually bought to fulfil a specific purpose. The purpose informs the components install (Called the 'Specification' or 'specs').</p> <p>Components can be replaced and updated, but some components are easier to change than others, so usually they are spec'd to remain as-is for a long time (Sometimes the complete service life of the server).</p>","tags":["zero","hardware","server"]},{"location":"zero/server-specs/#why-dont-we-just-buy-the-best-hardware-out-there","title":"Why Don't We just Buy the Best Hardware out There?","text":"<p>The simple answer is COST! Servers are significantly more expensive than Consumer hardware as it's designed to last much longer than a PC.</p> <p>Also, since buying a server isn't a subscription, manufacturers will charge a higher cost so they can survive without every company buying thousands of new servers each year.</p>","tags":["zero","hardware","server"]},{"location":"zero/server-specs/#how-do-we-pick-the-specs","title":"How Do We Pick the Specs?","text":"<p>To talk about how we approach specing a server, we're going to consider 3 examples of what a server would do:</p> <ul> <li>Versatile High-Performance Compute</li> <li>AI, Video &amp; Simulation Workloads</li> <li>Data Storage</li> </ul> <p>As a note, assume that all of these examples include room for expansion.</p>","tags":["zero","hardware","server"]},{"location":"zero/server-specs/#1-versatile-high-performance-compute","title":"1. Versatile High-Performance Compute","text":"<p>These servers are designed simply to be able to handle lots of requests, run lots of applications and be an all-rounder.</p> <p>CPU:</p> <p>The first focus would be on the CPUs. You'd want modern, high-speed and high-core / thread CPUs that allow multi-threading and parallel processing. Larger cache sizes would mean more data can be stored closer to the CPU so it has to wait less.</p> <p>RAM:</p> <p>Your next focus would be the RAM. RAM is the next step in the Memory Hierarchy\u00a0\u29c9. Having more RAM means more of the application / data is ready to be processed by the CPU. ECC ram is a MUST for servers to make sure no invalid data is read or written.</p> <p>RAM speeds are also important, you'll want something that isn't too slow, or else your CPUs waste clock cycles waiting for data to be read off disk.</p> <p>Storage:</p> <p>Compute servers don't need that much storage. Their storage needs include:</p> <ul> <li>Space for the OS</li> <li>Space for all the applications running</li> <li>Space for just the essential data it's storing to do it's job</li> </ul> <p>All the additional storage needs are usually fulfilled by a Storage Server that it talks to through the network.</p> <p>The focus here would normally be data redundancy and access speed.</p> <p>You don't need super redundancy, and you don't need exceptionally fast disk access, but you don't want to go outdated.</p> <p>A common approach is SSDs for the OS and applications, and HDDs for the data. Remember, with SAS you can get 6Gb/s of data transfer from spinning disks!</p> <p>Networking:</p> <p>When deciding on networking, you should have a pretty good expectation of what the server will be doing on the network. How many requests per second will it be getting? What are the size of the responses it will be replying with?</p> <p>We do not need the fastest speeds out there. Remember, we are bottlenecked by the networking hardware we attach to.</p> <p>If our switches and routers can only handle 1Gb/s, then it makes no sense to get faster hardware unless you specifically plan to upgrade your networking hardware early into the service life of this server.</p> <p>Redundancy is the aim of the game, so you'd want at least 2x RJ45 or SFP ports.</p> <p>Having multiple ports also allows you to connect to multiple networks! You could have a 10Gb/s connection to your Storage Server network and other servers, but only a 1Gb/s link to the internet if it fits your use-case.</p>","tags":["zero","hardware","server"]},{"location":"zero/server-specs/#2-ai-video-and-simulation-workloads","title":"2. AI, Video and Simulation Workloads","text":"<p>If you're building a Video Rendering server, Physics Simulating or AI server, your primary focus will be your GPU. GPUs are primarily for graphical processing, but are exponentially faster at Vector mathematics and Parallel Processing when compared to CPUs.</p> <p>GPUs really shine in AI, Video and Simulation workloads (Among other things), so some servers have a GPU installed to fulfil this purpose.</p> <p>GPU:</p> <p>Workloads which require a GPU have gotten incredibly resource heavy in the last few years, so normally when specing a GPU server, your GPU(s) will be your most expensive part(s) by far, as being close to the bleeding edge is important to not having to upgrade / retire the hardware early.</p> <p>CPU:</p> <p>You will still need a powerful CPU as networking and Disk operations are handled by the CPU, but since the majority of the requirements go to the GPU, you can relax the requirements here.</p> <p>RAM:</p> <p>All of these workloads usually have very large datasets to go with it, so a significant amount of RAM is recommended. GPUs have their own VRAM (Video RAM), but the standard RAM will usually be used when downloading and uploading the data to and from the server.</p> <p>Storage:</p> <p>As stated above, datasets for these workloads tend to be quite large. So large amounts of high-speed onboard storage is a must-have.</p> <p>This storage does not have to be bleeding edge, but should be quite roomy.</p> <p>Networking:</p> <p>Like the High-Performance Compute example above, you'll want speeds that match your network speeds, and especially your internet speed. If any upgrades in these areas are expected, you'll want to overspec on the server as the later upgrade will match the server's hardware.</p>","tags":["zero","hardware","server"]},{"location":"zero/server-specs/#3-data-storage","title":"3. Data Storage","text":"<p>Running a single (or a few) Network Attached Storage (NAS) Servers for archival, backup and block storage reasons is very common when specing out a multi-server system. These servers are usually much more powerful than you may think!</p> <p>CPUs:</p> <p>You will want fast CPUs, not as much as the High-Performance Compute server. But the CPU in this system will be spending most of it's time reading and writing to disk, as well as doing parity calculations, array rebuilds, (de)compression, encryption, etc.</p> <p>RAM:</p> <p>RAM should be one of your biggest focuses here. The more RAM you have, the more data you can copy into memory to respond to requests faster.</p> <p>High speeds will also be vital!</p> <p>Storage:</p> <p>It's a storage server. Load this up with as much storage as you possibly can!</p> <p>DO NOT FORGET: Data loss here can be catastrophic! Data Storage server will regularly use RAID to allow for the loss of one or more drives without incurring data loss. Some may even configure 'hot spares', which are drives that do nothing until another drive dies and it jumps in to store the data while the failed drive is replaced.</p> <p>Depending on how you want to use this server (Archival or just block storage) will tell you whether to focus on Drive speeds or drive capacity. Some requirements may require self-encrypting drives.</p> <p>Networking:</p> <p>You need a networking hardware that RIPS!</p> <p>You need to be able to pull data down and throw data off as fast as possible!</p> <p>It would be really bad if the network connection for this server gets saturated and it's unable to keep up with demand, as this means servers will be wasting precious clock cycles waiting for it's data.</p>","tags":["zero","hardware","server"]},{"location":"zero/server-specs/#what-next","title":"What Next?","text":"<p>Take a look at the specs for our 4 servers, and our laptop!</p> <ul> <li>Mallard</li> <li>Ruddy</li> <li>Pancakes</li> <li>Muscovy</li> <li>Runner (Laptop)</li> </ul> <p>Or get started on networking by asking what is a Router?</p>","tags":["zero","hardware","server"]},{"location":"zero/what-is-a-router/","title":"What is a Router?","text":"<p>Like a server, a router does what it says on the tin, it routes network traffic.</p> <p>Routers connect networks between eachother, but are primarily used to connect your local network to the internet.</p> <p>Many modern routers contain built-in Firewalls, VPNs, and more. But at it's very core, it allows you to control what is (or isn't) routed.</p> <p>The router will allow you to forward ports to devices on the network, allowing you to actually serve content.</p>","tags":["zero","networking"]},{"location":"zero/what-is-a-router/#what-next","title":"What Next?","text":"<p>Learn about our router.</p> <p>Or ask what is a switch?</p>","tags":["zero","networking"]},{"location":"zero/what-is-a-server/","title":"WHAT IS A SERVER? - The First Question","text":"<p>Simply, a server does what is says on the name it 'Serves' content.</p> <p>Servers are different from Personal Computers (PCs) in a few ways, most importantly it's designed to run multiple programs at the same time and handle high amounts of traffic and highly intensive computational tasks.</p> <p>Servers are normally very powerful, with a lot of RAM, Storage and even multiple CPUs!</p> <p>Servers aren't designed to be pretty, or quiet\u00a0\u29c9. They're designed to work.</p> <p>Servers are usually mounted into a Server Rack\u00a0\u29c9. Server Racks normally have networking and server hardware installed.</p> <p>Servers are build with redundancy in mind and normally have multiple network connections, multiple power supplies and can be remotely accessed and controlled.</p>","tags":["zero","hardware","server"]},{"location":"zero/what-is-a-server/#what-next","title":"What Next?","text":"<p>Want to learn more about servers? Find out what is in a server?</p> <p>Curious about Networking instead? Start by asking what is a Router?</p> <p>Or, how we handle power? Ask what is a UPS?</p>","tags":["zero","hardware","server"]},{"location":"zero/what-is-a-switch/","title":"What is a Switch?","text":"<p>A switch allows multiple devices on the same network to connect and communicate.</p> <p>Switches will usually have multiple ports operating at the same speed, and a few additional ports to run at a faster speed to connect switches to eachother and to the router.</p> <p>Switches can be configured to control what IPs devices are given, their communication speeds and a lot more!</p>","tags":["zero","networking"]},{"location":"zero/what-is-a-switch/#what-next","title":"What next?","text":"<p>Find out about our switches:</p> <ul> <li>Shakedog</li> <li>Five Guys</li> </ul> <p>Or, find the answer to what is a UPS?</p>","tags":["zero","networking"]},{"location":"zero/what-is-a-ups/","title":"What is a UPS?","text":"<p>It should be abundantly clear by now that redundancy is at the core of servers and networking.</p> <p>This extends to power, too. Without power, these servers can do nothing.</p> <p>An unexpected power loss event can be catastrophic for servers, servers and Server OSes are not designed for unexpected power loss. This can cause OS corruption, data loss and much more. A tripped breaker can cause days or weeks of downtime!</p> <p>This is why servers and networking hardware have two power supplies.</p> <p>The best way to power your rack is as follows:</p> <ul> <li>One PSU is connected to a primary PDU (Power Distribution Unit)</li> <li>The second PSU is connected to a second PDU</li> <li>These PDUs source their power from different circuits (Preventing a tripped breaker from bringing everything down)</li> <li>At least one PDU is connected to a UPS (Uninterruptible Power Supply)</li> </ul> <p>So, with all of this precursor knowledge, let's answer the question</p>","tags":["zero","hardware","power"]},{"location":"zero/what-is-a-ups/#okay-what-is-a-ups","title":"OKAY - What is a UPS?","text":"<p>A UPS or Uninterruptible Power Supply is a basically a smart battery. It is connected to the mains and outputs power to be used by the rack.</p> <p>If that mains connection fails for whatever reason, the UPS instantly switches to the internal battery backup to supply the load required by the servers.</p> <p>UPSes usually have a network connection both to allow remote monitoring and control, but also to be able to transmit to the network that mains power has been lost and to begin shutting down.</p>","tags":["zero","hardware","power"]},{"location":"zero/what-is-a-ups/#shutdown-graceful-exits-and-specing-a-ups","title":"SHUTDOWN! - Graceful Exits and Specing a UPS","text":"<p>The size of a UPS is measured in VA, volt amps (also known as watts!). So a UPS with 2,000VA would be able to output 2,000W for one hour before being empty.</p> <p>When you spec a UPS, you take the maximum draw of all of your equipment that will be connected to it, and how long it would need to take to safely stop all of the services and shut them all down. This graceful shutdown prevents data loss AND hardware damage!</p> <p>For example, let's say you have 4x servers which have a total draw of 1,000W each. Then you have networking hardware which draws an extra 1,000W combined.</p> <p>That's a total of 5,000W.</p> <p>In your testing, you have found that it takes about 10 minutes to safely shut everything down. But you want to add extra time as more services and hardware will appear over the lifetime of the UPS. I tend to round up to the nearest 15/20 minutes.</p> <p>You will need a UPS which can output 5,000W for 15 minutes. So, that's 5,000W/4 (As watts are the measurement of power over the time of 1 hour, don't think about it too hard.)</p> <p>Your minimum UPS size is 1,250VA</p>","tags":["zero","hardware","power"]},{"location":"zero/what-is-a-ups/#superpowers-ups-configurations","title":"SUPERPOWERS - UPS Configurations","text":"<p>UPSes can be configured to wait a set time after mains power is lost before sending the shutdown signal. This is because a lot of power outages are only a few minutes. Then, if the power isn't restored at the timeout, it'll send the shutdown signal.</p> <p>UPSes can also be configured to send a 'Wake on LAN' signal when mains power is restored and stabilised, to automatically restart all the hardware. This is a bit of a double-edged sword, as grid stabilisation after a blackout is more of an art than a science, and successive blackouts can occur.</p> <p>Finally, UPSes can also 'clean' the power. Alternating Current needs to be at a stable frequency, but the frequency after a blackout is often dirty\u00a0\u29c9 and not a clean waveform. This can cause damage to hardware.</p>","tags":["zero","hardware","power"]},{"location":"zero/what-is-a-ups/#what-next","title":"What next?","text":"<p>Learn about our own UPS, Minecraft</p> <p>Or learn about the Ubiquiti RPS, Bunsen</p> <p>This is the end of the WHAT IS? section of Layer Zero. You can go on to check Layer Zero Procedures for regularly maintenance and tasks you do at a hardware level. Or take the next step into LAYER TWO - Operating Systems and Storage!</p>","tags":["zero","hardware","power"]},{"location":"zero/networking/bunsen/","title":"BUNSEN - Redundant Power Supply","text":"<p>Ubiquiti is a lovely company that would never create a proprietary cable for the second PSU in it's networking gear\u2026 right?</p> <p>WRONG\u00a0\u29c9.</p> <p>So, if you didn't have the RPS and the SmartPower(TM) cables, and no battery backup. One loss to the mains, and the whole system goes down\u00a0\u29c9.</p> <p>Bunsen is connected to the power supply, which is attached to the UPS. If the mains go offline, the primary power cables (C13s) to the networking gear stops delivering power, but the RPS continues to deliver power through the SmartPower cables to each bit of networking gear.</p> <p>Without the RPS, if the power went out, our whole network would go off. The servers might still be powered, but they won't receive the shutdown signal from the UPS, and won't be able to communicate with any network attached storage, or eachother.</p> Item Spec Max Power Output 950W SmartPower Ports 6x SmartPower Networking 1x 1Gb/s RJ45 (for control)","tags":["zero","hardware","networking"]},{"location":"zero/networking/fiveguys/","title":"FIVE GUYS - One of Two Switches","text":"<p>CS++ has 2x identical Ubiquiti Pro 48 switches.</p> <p>This one only allows Cluster &amp; Data communications, and isn't connected to the internet.</p> <p>It is connected to Supermacs through a 1Gb/s Ethernet cable purely for control.</p> Item Spec RJ45 Ports 48x @ 1Gb/s SFP+ Ports 4x @ 10Gb/s Switching Layer Layer 3 - Network","tags":["zero","hardware","networking"]},{"location":"zero/networking/shakedog/","title":"SHAKE DOG - One of Two Switches","text":"<p>CS++ has 2x identical Ubiquiti Pro 48 switches.</p> <p>This one allows the servers to talk with each other, and connect to the internet.</p> <p>It is connected to Supermacs through a 10Gb/s Direct attach SFP+ cable.</p> Item Spec RJ45 Ports 48x @ 1Gb/s SFP+ Ports 4x @ 10Gb/s Switching Layer Layer 3 - Network","tags":["zero","hardware","networking"]},{"location":"zero/networking/supermacs/","title":"SUPERMACS - Our Router","text":"<p>Supermacs is our Ubiquiti Dream Machine - Special Edition and our core router.</p> <p>It runs our Sysadmin VPN Wireguard server as well as connecting all our servers to the internet.</p> <p>It also has a Hard Drive bay, which would automatically operate as a Network Video Recorder (NVR) if a Security Camera was attached to the network.</p> <p>Specs:</p> Item Spec Primary WAN Port 1x 2.5Gb/s RJ45 port (9) Secondary WAN Port 1x 10Gb/s SFP+ port (10) RJ45 Ports 2x 1Gb/s PoE+ ports (1, 2) &amp; 6x 1Gb/s PoE ports (3 - 8) SFP+ Ports 1x 10Gb/s SFP+ port (11) Switching Layer Layer 3 - Network Firewall Layer Layer 7 - Application","tags":["zero","hardware","networking"]},{"location":"zero/other/minecraft/","title":"MINECRAFT - Keeping the Lights On","text":"<p>Minecraft is our UPS. It's connected on the primary PDU (Blue).</p> <p>UPS FAILED</p> <p>Minecraft currently has a P.17 Bypass Relay Weld Fault and is unable to operate.</p> <p>The UPS should not be connected to power nor should it be connected to the PDUs on the rack.</p> <p>It is a APC Smart-UPS 2200 Tower</p> Item Spec Battery Lead-Acid Input Voltage 220V, 230V, 240V Input Frequency 50Hz Output Voltage 220V, 230V, 240V Output Frequency 50Hz Avg. Transfer Time 6 - 10ms Recharge Time 3 hours Capacity 2200VA","tags":["zero","hardware","power"]},{"location":"zero/other/runner/","title":"RUNNER - Our Laptop","text":"<p>In place of a KVM, we have a laptop which gives us portability, and a laptop in the case a Sysadmin does not have one.</p> <p>We call this laptop <code>Runner</code> after the species of duck.</p> <p>Runner is always connected to the Sysadmin VPN as it's primary purpose is managing infrastructure. It has it's own VPN config.</p> <p>Each sysadmin has a user account on Runner.</p>","tags":["zero","hardware","laptop"]},{"location":"zero/other/runner/#storage-locations","title":"Storage Locations","text":"<p>Runner must always be stored in one of two locations:</p> <ol> <li>CS++ Server Room, Aungier St.</li> <li>CS++ Locker, Grangegorman</li> </ol> <p>The laptop can be taken off-site for events and transit, but may not be stored outside of these locations.</p>","tags":["zero","hardware","laptop"]},{"location":"zero/other/runner/#specs","title":"Specs","text":"<p>Runner is a Dell Inspiron 7590 from ~2019, it is configured as such:</p> Item Spec CPU Intel i5-9300H GPU NVIDIA GTX 1050 w/ 3GB GDDR5 RAM 1x 8GB DDR4 @ 2666MHz SSD 256GB M.2 PCIe NVMe Drive <p>Runner does not have an RJ45 port, so to connect over Ethernet, you will need to bring an adapter.</p> <p>Runner suffers with a bit of a battery life problem, so if you're using it, make sure you bring the charger!</p>","tags":["zero","hardware","laptop"]},{"location":"zero/procedures/","title":"LAYER ZERO - Procedures","text":"<p>This section contains procedures you may need to perform on a hardware level.</p> <p>These procedures include:</p> <ol> <li>Network &amp; Power cables for a server</li> <li>Network &amp; Power cables for a switch, router, or RPS</li> <li>Network &amp; Power cables for a UPS</li> <li>Placing in / Removing a server from the rack</li> <li>Placing in / Removing a switch, router or RPS from the rack</li> <li>Adding, removing &amp; replacing components in a server</li> <li>Cable management</li> </ol>","tags":["zero","procedures"]},{"location":"zero/servers/mallard/","title":"MALLARD - Our Workhorse","text":"<p><code>Mallard</code> is a Dell R750xs and our only brand-new server.</p> <p>It was bought with <code>ProSupport</code> from PFH, this support ends on the 29th of August, 2029.</p> <p>Its chassis can support up to 16 hard drives and 8 NVMes, and takes up 2U of space.</p> <p>It is racked with B21 Dell ReadyRails.</p> <p>Dell is great at keeping records, and going to the Dell Support webpage, you can search the Service Tag and get full details on the server. The Service tag is in a thin pull-out piece of plastic on the bottom-right of the front plate. You should NEVER share the service tag.</p> <p>It's unique specs are as follows:</p> Item Spec Additional Details CPU 2x Intel Xeon Gold 5318Y @ 2.1GHz - 3.4GHz 24 Cores, 48 Threads, 36MB Cache, 165W TDP RAM 8x 32GB DDR4 @ 3200MT/s Sticks All from Micron, but mixed sticks OS Storage 800GB SAS 2.5\" HDD Sl Storage 2x 2.4TB SAS 2.5\" HDD Slots 2 iDRAC Yes, iDRAC 9 PSU 2x 1100W 80 Plus Titanium NIC Broadcom 57412 OCP NIC 3.0 2x 1 On-Board NIC Broadcom 5720 On-Board LOM 2x","tags":["zero","hardware","server"]},{"location":"zero/servers/muscovy/","title":"MUSCOVY - One of Three","text":"<p><code>Muscovy</code> is a Dell R630 and was one of 3 identical servers donated by SIG in 2024.</p> <p>Its chassis can support up to 8 hard drives, and takes up 1U of space.</p> <p>It is racked with A7 Dell ReadyRails.</p> <p>Dell is great at keeping records, and going to the Dell Support webpage, you can search the Service Tag and get full details on the server. The Service tag is in a thin pull-out piece of plastic located below the screen on the front plate. You should NEVER share the Service Tag.</p> <p>It's unique specs are as follows:</p> Item Spec Additional Details CPU 2x Intel Xeon E2687W V3 @ 3.1GHz - 3.5GHz 10 Cores, 20 Threads, 25MB Cache, 160W TDP RAM 8x 16GB DDR4 @ 2133/s Sticks From Dell OS Storage 300GB SAS 2.5\" HDD @ 15,000RPM Slot 1 Storage 1x 2.4TB SAS 2.5\" HDD Slot 2 iDRAC Yes, iDRAC 8 PSU 2x 750W 80 Plus Platinum NIC Intel X520 2x 10Gb SFP+, 2x 1Gb RJ45 On-Board NIC Broadcom 5720 On-Board LOM","tags":["zero","hardware","server"]},{"location":"zero/servers/pancakes/","title":"PANCAKES - One of Three","text":"<p><code>Pancakes</code> is a Dell R630 and was one of 3 identical servers donated by SIG in 2024.</p> <p>Its chassis can support up to 8 hard drives, and takes up 1U of space.</p> <p>It is racked with A7 Dell ReadyRails.</p> <p>Dell is great at keeping records, and going to the Dell Support webpage, you can search the Service Tag and get full details on the server. The Service tag is in a thin pull-out piece of plastic located below the screen on the front plate. You should NEVER share the Service Tag.</p> <p>It's unique specs are as follows:</p> Item Spec Additional Details CPU 2x Intel Xeon E2687W V3 @ 3.1GHz - 3.5GHz 10 Cores, 20 Threads, 25MB Cache, 160W TDP RAM 8x 16GB DDR4 @ 2133/s Sticks From Dell OS Storage 300GB SAS 2.5\" HDD @ 15,000RPM Slot 1 Storage 1x 2.4TB SAS 2.5\" HDD Slot 2 iDRAC Yes, iDRAC 8 PSU 2x 750W 80 Plus Platinum NIC Intel X520 2x 10Gb SFP+, 2x 1Gb RJ45 On-Board NIC Broadcom 5720 On-Board LOM","tags":["zero","hardware","server"]},{"location":"zero/servers/ruddy/","title":"RUDDY - One of Three","text":"<p><code>Ruddy</code> is a Dell R630 and was one of 3 identical servers donated by SIG in 2024.</p> <p>Its chassis can support up to 8 hard drives, and takes up 1U of space.</p> <p>It is racked with A7 Dell ReadyRails.</p> <p>Dell is great at keeping records, and going to the Dell Support webpage, you can search the Service Tag and get full details on the server. The Service tag is in a thin pull-out piece of plastic located below the screen on the front plate. You should NEVER share the Service Tag.</p> <p>It's unique specs are as follows:</p> Item Spec Additional Details CPU 2x Intel Xeon E2687W V3 @ 3.1GHz - 3.5GHz 10 Cores, 20 Threads, 25MB Cache, 160W TDP RAM 8x 16GB DDR4 @ 2133/s Sticks From Dell OS Storage 300GB SAS 2.5\" HDD @ 15,000RPM Slot 1 Storage 1x 2.4TB SAS 2.5\" HDD Slot 2 iDRAC Yes, iDRAC 8 PSU 2x 750W 80 Plus Platinum NIC Intel X520 2x 10Gb SFP+, 2x 1Gb RJ45 On-Board NIC Broadcom 5720 On-Board LOM","tags":["zero","hardware","server"]}]}